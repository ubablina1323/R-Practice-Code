#Sample dataframe creation
Died.At <- c(22,40,72,41)
Writer.At <- c(16, 18, 36, 36)
First.Name <- c("John", "Edgar", "Walt", "Jane")
Second.Name <- c("Doe", "Poe", "Whitman", "Austen")
Sex <- c("MALE", "MALE", "MALE", "FEMALE")
Date.Of.Death <- c("2015-05-10", "1849-10-07", "1892-03-26","1817-07-18")

# Syntax Data.frame(list of all the vectors/lists)
#We have to be very careful with the case sensitivity of R
# data.frame(Died.At,Writer.At,First.Name,Second.Name,Sex,Date.Of.Death)
Dataframeexample1<-data.frame(Died.At,Writer.At,First.Name,Second.Name,Sex,Date.Of.Death)
# Output will be like this 
  Died.At Writer.At First.Name Second.Name    Sex Date.Of.Death
1      22        16       John         Doe   MALE    2015-05-10
2      40        18      Edgar         Poe   MALE    1849-10-07
3      72        36       Walt     Whitman   MALE    1892-03-26
4      41        36       Jane      Austen FEMALE    1817-07-18
#If you want to understand the dataframe values use the str function
str(Dataframeexample1)
'data.frame':	4 obs. of  6 variables:
 $ Died.At      : num  22 40 72 41
 $ Writer.At    : num  16 18 36 36
 $ First.Name   : Factor w/ 4 levels "Edgar","Jane",..: 3 1 4 2
 $ Second.Name  : Factor w/ 4 levels "Austen","Doe",..: 2 3 4 1
 $ Sex          : Factor w/ 2 levels "FEMALE","MALE": 2 2 2 1
 $ Date.Of.Death: Factor w/ 4 levels "1817-07-18","1849-10-07",..: 4 2 3 1
 
# Here in the above structure if you observe carefully first 2 are numbers 3,4,5,6 are factors. In reality do we really 
#need them as factors ? No. Only Sex will be the factor as this was the categorical variable, other 2 are not required. So inorder to 
#change them to the normal object. For this we have to mention I(variable) while creating in the data frame.
#for example Dataframeexample1<-data.frame(Died.At,Writer.At,I(First.Name),Second.Name,Sex,Date.Of.Death) for date it is as.Date(Date.Of.Death)
'data.frame':	4 obs. of  6 variables:
 $ Died.At      : num  22 40 72 41
 $ Writer.At    : num  16 18 36 36
 $ First.Name   :Class 'AsIs'  chr [1:4] "John" "Edgar" "Walt" "Jane"
 $ Second.Name  : Factor w/ 4 levels "Austen","Doe",..: 2 3 4 1
 $ Sex          : Factor w/ 2 levels "FEMALE","MALE": 2 2 2 1
 $ Date.Of.Death: Factor w/ 4 levels "1817-07-18","1849-10-07",..: 4 2 3 1
 
dim(Dataframeexample1)# to know matrix dimension
dim(Dataframeexample1)[1]# to pull row length. Here 1 specifies row
dim(Dataframeexample1)[2]# to pull col length. Here 2 specifies col
nrow(Dataframeexample1)# to pull row length. 
ncol(Dataframeexample1)# to pull col length. 
length(Dataframeexample1)# to pull col length
which(Dataframeexample1$Second.Name=="Doe", arr.ind=TRUE)
search()
Dataframeexample1
Diedage<-Dataframeexample1$Died.At
Diedage
mean(Dataframeexample1$Died.At)
apply(Dataframeexample1[1,drop=FALSE] ,2,mean)
test<-matrix(c(1:9),3,3)
test
apply(test,2,mean)
apply(test,1,mean)
young_writers_df <- subset(Dataframeexample1, Died.At <= 40)# subsetting the dataframe.Using & we can have more filter conditions.
forty_writers_df <- Dataframeexample1[grep("4", Dataframeexample1$Died.At),]#using grep to filter records whose age is having 4
forty_writers_df
